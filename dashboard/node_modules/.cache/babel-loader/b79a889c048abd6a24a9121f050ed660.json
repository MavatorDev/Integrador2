{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Integrador2/dashboard/src/pages/dashboard/Llamados.js\";\nimport React, { Component } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from './Title';\nimport axios from 'axios';\n\nclass Llamados extends Component {\n  constructor(props) {\n    super(props);\n\n    this.createData = (id, fecha, origen, destino, llamado) => {\n      return {\n        id,\n        fecha,\n        origen,\n        destino,\n        llamado\n      };\n    };\n\n    this.state = {\n      rows: []\n    };\n  } // Genera el contenido de cada fila en llamados\n\n\n  componentDidMount() {\n    const newRows = [];\n    axios.get('http://54.90.124.184:8000/api/states/').then(res => {\n      console.log(res.data[0]);\n      var i = 0;\n\n      for (let llamado in res.data) {\n        if (res.data[i].state == 0) {\n          newRows.push(this.createData(i, res.data[i].Date, 'Módulo de Monitoreo', 'Módulo de Optimización', 'Si'));\n        } else {\n          newRows.push(this.createData(i, res.data[i].Date, 'Módulo de Monitoreo', 'Módulo de Optimización', 'No'));\n        }\n\n        i++;\n      }\n\n      this.setState({\n        rows: newRows\n      });\n    });\n    /*\n    const newRows = [\n    this.createData(0, '14:45, 16 Mar 2020', 'Módulo de Monitoreo', 'Módulo de Optimización', 'Si'),\n    this.createData(1, '14:30, 16 Mar 2020', 'Módulo de Monitoreo', 'Módulo de Optimización', 'No'),\n    this.createData(2, '14:15, 16 Mar 2020', 'Módulo de Monitoreo', 'Módulo de Optimización', 'No'),\n    this.createData(3, '14:00, 16 Mar 2020', 'Módulo de Monitoreo', 'Módulo de Optimización', 'No'),\n    this.createData(4, '13:45, 16 Mar 2020', 'Módulo de Monitoreo', 'Módulo de Optimización', 'Si'),\n    this.createData(5, '13:30, 16 Mar 2020', 'Módulo de Monitoreo', 'Módulo de Optimización', 'No'),\n    this.createData(6, '13:15, 16 Mar 2020', 'Módulo de Monitoreo', 'Módulo de Optimización', 'Si'),\n    this.createData(7, '13:00, 16 Mar 2020', 'Módulo de Monitoreo', 'Módulo de Optimización', 'No'),\n    this.createData(8, '12:45, 16 Mar 2020', 'Módulo de Monitoreo', 'Módulo de Optimización', 'No'),\n    this.createData(9, '12:30, 16 Mar 2020', 'Módulo de Monitoreo', 'Módulo de Optimización', 'Si'),\n    ];\n    */\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, \"Llamados: Monitoreo - Optimizaci\\xF3n\"), /*#__PURE__*/React.createElement(Table, {\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }, \"Fecha\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    }, \"Origen\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    }, \"Destino\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }\n    }, \"Llamado\"))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, this.state.rows.map(row => /*#__PURE__*/React.createElement(TableRow, {\n      key: row.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, row.fecha), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, row.origen), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, row.destino), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, row.llamado))))));\n  }\n\n}\n\nexport default Llamados;","map":{"version":3,"sources":["/home/ubuntu/Integrador2/dashboard/src/pages/dashboard/Llamados.js"],"names":["React","Component","Table","TableBody","TableCell","TableHead","TableRow","Title","axios","Llamados","constructor","props","createData","id","fecha","origen","destino","llamado","state","rows","componentDidMount","newRows","get","then","res","console","log","data","i","push","Date","setState","render","map","row"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from './Title';\nimport axios from 'axios';\n\nclass Llamados extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      rows: []\n    };\n  }\n\n  // Genera el contenido de cada fila en llamados\n  createData = (id, fecha, origen, destino, llamado) => {\n    return { id, fecha, origen, destino, llamado };\n  }\n\n  componentDidMount() {\n    const newRows = [];\n\n    axios.get('http://54.90.124.184:8000/api/states/')\n      .then(res => {\n\n        console.log(res.data[0]);\n\n        var i = 0;\n        for (let llamado in res.data) {\n          \n          if (res.data[i].state == 0) {\n            newRows.push(this.createData(i, res.data[i].Date, 'Módulo de Monitoreo', 'Módulo de Optimización', 'Si'));\n          } else {\n            newRows.push(this.createData(i, res.data[i].Date, 'Módulo de Monitoreo', 'Módulo de Optimización', 'No'));\n          }\n          i++;\n        }\n\n        this.setState({\n          rows: newRows\n        });\n\n      });\n\n      /*\n    const newRows = [\n      this.createData(0, '14:45, 16 Mar 2020', 'Módulo de Monitoreo', 'Módulo de Optimización', 'Si'),\n      this.createData(1, '14:30, 16 Mar 2020', 'Módulo de Monitoreo', 'Módulo de Optimización', 'No'),\n      this.createData(2, '14:15, 16 Mar 2020', 'Módulo de Monitoreo', 'Módulo de Optimización', 'No'),\n      this.createData(3, '14:00, 16 Mar 2020', 'Módulo de Monitoreo', 'Módulo de Optimización', 'No'),\n      this.createData(4, '13:45, 16 Mar 2020', 'Módulo de Monitoreo', 'Módulo de Optimización', 'Si'),\n      this.createData(5, '13:30, 16 Mar 2020', 'Módulo de Monitoreo', 'Módulo de Optimización', 'No'),\n      this.createData(6, '13:15, 16 Mar 2020', 'Módulo de Monitoreo', 'Módulo de Optimización', 'Si'),\n      this.createData(7, '13:00, 16 Mar 2020', 'Módulo de Monitoreo', 'Módulo de Optimización', 'No'),\n      this.createData(8, '12:45, 16 Mar 2020', 'Módulo de Monitoreo', 'Módulo de Optimización', 'No'),\n      this.createData(9, '12:30, 16 Mar 2020', 'Módulo de Monitoreo', 'Módulo de Optimización', 'Si'),\n    ];\n    */\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Title>Llamados: Monitoreo - Optimización</Title>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Fecha</TableCell>\n              <TableCell>Origen</TableCell>\n              <TableCell>Destino</TableCell>\n              <TableCell>Llamado</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {this.state.rows.map((row) => (\n              <TableRow key={row.id}>\n                <TableCell>{row.fecha}</TableCell>\n                <TableCell>{row.origen}</TableCell>\n                <TableCell>{row.destino}</TableCell>\n                <TableCell>{row.llamado}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Llamados;"]},"metadata":{},"sourceType":"module"}